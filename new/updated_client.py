from pygame import *
import socket
import json
from threading import Thread
import os
import sys

# ---PYGAME –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ---
WIDTH, HEIGHT = 800, 600
init()
mixer.init()
screen = display.set_mode((WIDTH, HEIGHT))
clock = time.Clock()
display.set_caption("–ü—ñ–Ω–≥-–ü–æ–Ω–≥")

# --- –®–†–ò–§–¢–ò ---
font_title = font.Font(None, 64)
font_button = font.Font(None, 36)
font_win = font.Font(None, 72)
font_main = font.Font(None, 36)
font_small = font.Font(None, 24)


# === –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ó–í–£–ö–Ü–í ===
def load_sound_safe(path, volume=0.5):
    """
    –ë–µ–∑–ø–µ—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–≤—É–∫ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
    path - —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
    volume - –≥—É—á–Ω—ñ—Å—Ç—å –≤—ñ–¥ 0.0 –¥–æ 1.0
    –ü–æ–≤–µ—Ä—Ç–∞—î –∑–≤—É–∫ –∞–±–æ None –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    """
    try:
        sound = mixer.Sound(path)
        sound.set_volume(volume)
        return sound
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—É–∫ {path}: {e}")
        return None


def load_music_safe(path, volume=0.3):
    """
    –ë–µ–∑–ø–µ—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É
    path - —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
    volume - –≥—É—á–Ω—ñ—Å—Ç—å –≤—ñ–¥ 0.0 –¥–æ 1.0
    """
    try:
        mixer.music.load(path)
        mixer.music.set_volume(volume)
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É {path}: {e}")
        return False


print("üîä –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑–≤—É–∫–∏...")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–≤—É–∫–æ–≤–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤
paddle_hit_sound = load_sound_safe('audio/paddle_hit.wav', 0.6)  # –ó–≤—É–∫ —É–¥–∞—Ä—É –ø–æ —Ä–∞–∫–µ—Ç—Ü—ñ
wall_hit_sound = load_sound_safe('audio/wall_hit.wav', 0.4)  # –ó–≤—É–∫ —É–¥–∞—Ä—É –æ–± —Å—Ç—ñ–Ω—É
menu_click_sound = load_sound_safe('audio/menu_click.wav', 0.5)  # –ó–≤—É–∫ –∫–ª—ñ–∫—É –≤ –º–µ–Ω—é
win_sound = load_sound_safe('audio/win.wav', 0.7)  # –ó–≤—É–∫ –ø–µ—Ä–µ–º–æ–≥–∏
lose_sound = load_sound_safe('audio/lose.wav', 0.7)  # –ó–≤—É–∫ –ø–æ—Ä–∞–∑–∫–∏

background_music_loaded = load_music_safe('audio/background_music.wav', 0.3)

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ñ–æ–Ω–æ–≤–æ—ó –º—É–∑–∏–∫–∏
music_playing = False


# === –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ó–û–ë–†–ê–ñ–ï–ù–¨ ===
def load_image_safe(path, size=None):
    """
    –ë–µ–∑–ø–µ—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
    path - —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
    size - —Ä–æ–∑–º—ñ—Ä (width, height) –∞–±–æ None
    –ü–æ–≤–µ—Ä—Ç–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–±–æ None –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    """
    try:
        img = image.load(path)
        if size:
            img = transform.scale(img, size)
        return img.convert_alpha()
    except:
        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ {path}")
        return None


print("üé® –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...")

# –§–æ–Ω–∏
menu_bg = load_image_safe('images/backgrounds/menu_bg.jpg', (WIDTH, HEIGHT))
game_bg = load_image_safe('images/backgrounds/game_bg.jpg', (WIDTH, HEIGHT))
settings_bg = load_image_safe('images/backgrounds/settings_bg.jpg', (WIDTH, HEIGHT))
win_bg = load_image_safe('images/backgrounds/win_bg.jpg', (WIDTH, HEIGHT))

# –†–µ–∑–µ—Ä–≤–Ω–∏–π —Ñ–æ–Ω
if game_bg is None:
    try:
        game_bg = image.load('bg.jpg')
        game_bg = transform.scale(game_bg, (WIDTH, HEIGHT))
    except:
        print("‚ö†Ô∏è –§–æ–Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        game_bg = None

# –Ü–≥—Ä–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
ball_img = load_image_safe('images/game_elements/ball.png', (20, 20))
paddle1_img = load_image_safe('images/game_elements/paddle1.png', (20, 100))
paddle2_img = load_image_safe('images/game_elements/paddle2.png', (20, 100))

print("‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


# === –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó –ú–£–ó–ò–ö–û–Æ ===
def start_background_music():
    """–ó–∞–ø—É—Å–∫–∞—î —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É"""
    global music_playing
    if background_music_loaded and game_settings["sound_enabled"] and not music_playing:
        try:
            mixer.music.play(-1)  # -1 –æ–∑–Ω–∞—á–∞—î –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è
            music_playing = True
            print("üéµ –§–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Ñ–æ–Ω–æ–≤–æ—ó –º—É–∑–∏–∫–∏: {e}")


def stop_background_music():
    """–ó—É–ø–∏–Ω—è—î —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É"""
    global music_playing
    if music_playing:
        mixer.music.stop()
        music_playing = False
        print("üéµ –§–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑—É–ø–∏–Ω–µ–Ω–∞")


def play_sound_effect(sound):
    """–ü—Ä–æ–≥—Ä–∞—î –∑–≤—É–∫–æ–≤–∏–π –µ—Ñ–µ–∫—Ç —è–∫—â–æ –∑–≤—É–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–æ"""
    if sound and game_settings["sound_enabled"]:
        try:
            sound.play()
        except Exception as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É: {e}")


# === –ö–õ–ê–°–ò –î–õ–Ø –ú–ï–ù–Æ ===
class Button:
    def __init__(self, x, y, width, height, text, action=None):
        self.rect = Rect(x, y, width, height)
        self.text = text
        self.action = action
        self.hovered = False

    def draw(self, screen):
        # –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É
        if self.hovered:
            color = (70, 130, 180)  # –°–≤—ñ—Ç–ª–æ-—Å–∏–Ω—ñ–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
            text_color = (255, 255, 255)
        else:
            color = (50, 50, 100)  # –¢–µ–º–Ω–æ-—Å–∏–Ω—ñ–π –∑–≤–∏—á–∞–π–Ω–∏–π —Å—Ç–∞–Ω
            text_color = (200, 200, 200)

        # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É
        draw.rect(screen, color, self.rect)
        draw.rect(screen, (255, 255, 255), self.rect, 2)  # –ë—ñ–ª–∞ —Ä–∞–º–∫–∞

        # –ú–∞–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
        text_surface = font_button.render(self.text, True, text_color)
        text_rect = text_surface.get_rect(center=self.rect.center)
        screen.blit(text_surface, text_rect)

    def handle_event(self, event):
        if event.type == MOUSEMOTION:
            self.hovered = self.rect.collidepoint(event.pos)
        elif event.type == MOUSEBUTTONDOWN:
            if self.rect.collidepoint(event.pos) and self.action:
                play_sound_effect(menu_click_sound)
                self.action()
                return True
        return False


# === –°–¢–ê–ù–ò –ì–†–ò ===
MENU = "menu"
SETTINGS = "settings"
CONNECTING = "connecting"
PLAYING = "playing"

current_state = MENU

# === –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ì–†–ò ===
game_settings = {
    "server_ip": "localhost",
    "server_port": 8080,
    "player_name": "–ì—Ä–∞–≤–µ—Ü—å",
    "sound_enabled": True
}


# === –§–£–ù–ö–¶–Ü–á –î–õ–Ø –ö–ù–û–ü–û–ö –ú–ï–ù–Æ ===
def start_game():
    global current_state
    current_state = CONNECTING
    start_background_music()
    print("üéÆ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –≥—Ä–∏...")


def open_settings():
    global current_state
    current_state = SETTINGS
    print("‚öôÔ∏è –í—ñ–¥–∫—Ä–∏–≤–∞—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è...")


def exit_game():
    print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
    stop_background_music()
    quit()
    sys.exit()


def back_to_menu():
    global current_state
    current_state = MENU
    stop_background_music()
    print("üè† –ü–æ–≤–µ—Ä—Ç–∞—é—Å—è –¥–æ –º–µ–Ω—é...")


def toggle_sound():
    """–ü–µ—Ä–µ–º–∏–∫–∞—î –∑–≤—É–∫"""
    game_settings["sound_enabled"] = not game_settings["sound_enabled"]
    if game_settings["sound_enabled"]:
        start_background_music()
        print("üîä –ó–≤—É–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–æ")
    else:
        stop_background_music()
        print("üîá –ó–≤—É–∫ –≤–∏–º–∫–Ω–µ–Ω–æ")


# === –°–¢–í–û–†–ï–ù–ù–Ø –ö–ù–û–ü–û–ö –ú–ï–ù–Æ ===
menu_buttons = [
    Button(WIDTH // 2 - 100, 250, 200, 50, "–ì—Ä–∞—Ç–∏", start_game),
    Button(WIDTH // 2 - 100, 320, 200, 50, "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", open_settings),
    Button(WIDTH // 2 - 100, 390, 200, 50, "–í–∏—Ö—ñ–¥", exit_game)
]

settings_buttons = [
    Button(50, 500, 150, 40, "–ù–∞–∑–∞–¥", back_to_menu),
    Button(WIDTH - 200, 500, 150, 40, "–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏", back_to_menu),
    Button(350, 300, 150, 40, "–ó–≤—É–∫ –≤–∫–ª/–≤–∏–∫–ª", toggle_sound)
]


# === –§–£–ù–ö–¶–Ü–á –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø ===
def draw_menu():
    """–ú–∞–ª—é—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    # –§–æ–Ω –º–µ–Ω—é
    if menu_bg:
        screen.blit(menu_bg, (0, 0))
    else:
        screen.fill((30, 30, 60))

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_text = font_title.render("–ü–Ü–ù–ì-–ü–û–ù–ì", True, (255, 255, 255))
    title_rect = title_text.get_rect(center=(WIDTH // 2, 150))
    screen.blit(title_text, title_rect)

    # –ü—ñ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
    subtitle_text = font_main.render("–û–Ω–ª–∞–π–Ω –≥—Ä–∞ –¥–ª—è –¥–≤–æ—Ö –≥—Ä–∞–≤—Ü—ñ–≤", True, (200, 200, 200))
    subtitle_rect = subtitle_text.get_rect(center=(WIDTH // 2, 190))
    screen.blit(subtitle_text, subtitle_rect)

    # –ö–Ω–æ–ø–∫–∏
    for button in menu_buttons:
        button.draw(screen)


def draw_settings():
    """–ú–∞–ª—é—î –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"""
    # –§–æ–Ω –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    if settings_bg:
        screen.blit(settings_bg, (0, 0))
    else:
        screen.fill((40, 40, 70))

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_text = font_title.render("–ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø", True, (255, 255, 255))
    title_rect = title_text.get_rect(center=(WIDTH // 2, 80))
    screen.blit(title_text, title_rect)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞
    y_offset = 150

    # IP —Å–µ—Ä–≤–µ—Ä–∞
    ip_label = font_main.render("IP —Å–µ—Ä–≤–µ—Ä–∞:", True, (255, 255, 255))
    screen.blit(ip_label, (100, y_offset))
    ip_value = font_main.render(game_settings["server_ip"], True, (200, 255, 200))
    screen.blit(ip_value, (300, y_offset))

    # –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
    y_offset += 50
    port_label = font_main.render("–ü–æ—Ä—Ç:", True, (255, 255, 255))
    screen.blit(port_label, (100, y_offset))
    port_value = font_main.render(str(game_settings["server_port"]), True, (200, 255, 200))
    screen.blit(port_value, (300, y_offset))

    # –Ü–º'—è –≥—Ä–∞–≤—Ü—è
    y_offset += 50
    name_label = font_main.render("–Ü–º'—è –≥—Ä–∞–≤—Ü—è:", True, (255, 255, 255))
    screen.blit(name_label, (100, y_offset))
    name_value = font_main.render(game_settings["player_name"], True, (200, 255, 200))
    screen.blit(name_value, (300, y_offset))

    # –ó–≤—É–∫
    y_offset += 50
    sound_label = font_main.render("–ó–≤—É–∫:", True, (255, 255, 255))
    screen.blit(sound_label, (100, y_offset))
    sound_status = "–£–≤—ñ–º–∫–Ω–µ–Ω–æ" if game_settings["sound_enabled"] else "–í–∏–º–∫–Ω–µ–Ω–æ"
    sound_color = (200, 255, 200) if game_settings["sound_enabled"] else (255, 200, 200)
    sound_value = font_main.render(sound_status, True, sound_color)
    screen.blit(sound_value, (300, y_offset))

    # –ü—ñ–¥–∫–∞–∑–∫–∞
    hint_text = font_small.render("–ü—ñ–¥–∫–∞–∑–∫–∞: –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –∫–æ–¥—ñ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è IP", True, (150, 150, 150))
    screen.blit(hint_text, (100, 400))

    # –ö–Ω–æ–ø–∫–∏
    for button in settings_buttons:
        button.draw(screen)


def draw_connecting():
    """–ú–∞–ª—é—î –µ–∫—Ä–∞–Ω –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"""
    # –§–æ–Ω
    if game_bg:
        screen.blit(game_bg, (0, 0))
    else:
        screen.fill((30, 30, 30))

    # –¢–µ–∫—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    connecting_text = font_title.render("–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...", True, (255, 255, 255))
    connecting_rect = connecting_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 - 50))
    screen.blit(connecting_text, connecting_rect)

    # –ü—ñ–¥—Ç–µ–∫—Å—Ç
    hint_text = font_main.render("–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º", True, (200, 200, 200))
    hint_rect = hint_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))
    screen.blit(hint_text, hint_rect)

    # –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è
    instruction_text = font_small.render("–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ", True, (150, 150, 150))
    instruction_rect = instruction_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 + 50))
    screen.blit(instruction_text, instruction_rect)

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    back_button = Button(WIDTH // 2 - 75, HEIGHT // 2 + 100, 150, 40, "–ù–∞–∑–∞–¥", back_to_menu)
    back_button.hovered = back_button.rect.collidepoint(mouse.get_pos())
    back_button.draw(screen)

    return back_button


# === –ú–ï–†–ï–ñ–ï–í–Ü –§–£–ù–ö–¶–Ü–á ===
def connect_to_server():
    """–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client.connect((game_settings["server_ip"], game_settings["server_port"]))
        buffer = ""
        game_state = {}
        my_id = int(client.recv(24).decode())
        return my_id, game_state, buffer, client
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {e}")
        return None


def receive():
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞"""
    global buffer, game_state, game_over
    while not game_over and current_state == PLAYING:
        try:
            data = client.recv(1024).decode()
            buffer += data
            while "\n" in buffer:
                packet, buffer = buffer.split("\n", 1)
                if packet.strip():
                    game_state = json.loads(packet)
        except:
            game_state["winner"] = -1
            break


# === –û–°–ù–û–í–ù–ò–ô –Ü–ì–†–û–í–ò–ô –¶–ò–ö–õ ===
# –Ü–≥—Ä–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ
game_over = False
winner = None
you_winner = None
my_id = None
game_state = {}
buffer = ""
client = None
connection_attempts = 0
last_sound_event = None

while True:
    # –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π
    for e in event.get():
        if e.type == QUIT:
            stop_background_music()
            exit()

        # –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Å—Ç–∞–Ω—ñ–≤
        if current_state == MENU:
            for button in menu_buttons:
                button.handle_event(e)

        elif current_state == SETTINGS:
            for button in settings_buttons:
                button.handle_event(e)

        elif current_state == CONNECTING:
            back_button = draw_connecting()  # –û—Ç—Ä–∏–º—É—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±—Ä–æ–±–∫–∏
            back_button.handle_event(e)

    # === –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø –í–Ü–î–ü–û–í–Ü–î–ù–û –î–û –°–¢–ê–ù–£ ===
    if current_state == MENU:
        draw_menu()

    elif current_state == SETTINGS:
        draw_settings()

    elif current_state == CONNECTING:
        draw_connecting()

        # –°–ø—Ä–æ–±–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è (–Ω–µ –±–ª–æ–∫—É—é—á–∞)
        connection_attempts += 1
        if connection_attempts > 60:  # –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É (60 –∫–∞–¥—Ä—ñ–≤)
            connection_attempts = 0
            result = connect_to_server()
            if result:
                my_id, game_state, buffer, client = result
                current_state = PLAYING
                game_over = False
                you_winner = None
                Thread(target=receive, daemon=True).start()
                print("‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞!")

    elif current_state == PLAYING:
        # === –Ü–ì–†–û–í–ê –õ–û–ì–Ü–ö–ê ===

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ñ–æ–Ω—É
        if game_bg:
            screen.blit(game_bg, (0, 0))
        else:
            screen.fill((30, 30, 30))

        # –ï–∫—Ä–∞–Ω –≤—ñ–¥–ª—ñ–∫—É
        if "countdown" in game_state and game_state["countdown"] > 0:
            countdown_text = font.Font(None, 72).render(str(game_state["countdown"]), True, (255, 255, 255))
            screen.blit(countdown_text, (WIDTH // 2 - 20, HEIGHT // 2 - 30))
            display.update()
            continue

        # –ï–∫—Ä–∞–Ω –ø–µ—Ä–µ–º–æ–≥–∏
        if "winner" in game_state and game_state["winner"] is not None:
            if win_bg:
                screen.blit(win_bg, (0, 0))
            else:
                screen.fill((20, 20, 20))

            if you_winner is None:
                if game_state["winner"] == my_id:
                    you_winner = True
                    play_sound_effect(win_sound)
                else:
                    you_winner = False
                    play_sound_effect(lose_sound)

            if you_winner:
                text = "–¢–∏ –ø–µ—Ä–µ–º—ñ–≥!"
            else:
                text = "–ü–æ—â–∞—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–º —Ä–∞–∑–æ–º!"

            win_text = font_win.render(text, True, (255, 215, 0))
            text_rect = win_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))
            screen.blit(win_text, text_rect)

            # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é
            menu_button = Button(WIDTH // 2 - 100, HEIGHT // 2 + 80, 200, 50, "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", back_to_menu)
            menu_button.hovered = menu_button.rect.collidepoint(mouse.get_pos())
            menu_button.draw(screen)

            # –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—É –ø–æ –∫–Ω–æ–ø—Ü—ñ –º–µ–Ω—é
            for e in event.get():
                if e.type == QUIT:
                    stop_background_music()
                    exit()
                menu_button.handle_event(e)

            display.update()
            continue

        # –û—Å–Ω–æ–≤–Ω–∞ –≥—Ä–∞
        if game_state:
            # –†–∞–∫–µ—Ç–∫–∏
            if paddle1_img:
                screen.blit(paddle1_img, (20, game_state['paddles']['0']))
            else:
                draw.rect(screen, (0, 255, 0), (20, game_state['paddles']['0'], 20, 100))

            if paddle2_img:
                screen.blit(paddle2_img, (WIDTH - 40, game_state['paddles']['1']))
            else:
                draw.rect(screen, (255, 0, 255), (WIDTH - 40, game_state['paddles']['1'], 20, 100))

            # –ú'—è—á
            if ball_img:
                screen.blit(ball_img, (game_state['ball']['x'] - 10, game_state['ball']['y'] - 10))
            else:
                draw.circle(screen, (255, 255, 255), (game_state['ball']['x'], game_state['ball']['y']), 10)

            # –†–∞—Ö—É–Ω–æ–∫
            score_text = font_main.render(f"{game_state['scores'][0]} : {game_state['scores'][1]}", True,
                                          (255, 255, 255))
            screen.blit(score_text, (WIDTH // 2 - 25, 20))

            # –ó–≤—É–∫–æ–≤—ñ –ø–æ–¥—ñ—ó
            if game_state['sound_event'] and game_settings["sound_enabled"]:
                if game_state['sound_event'] == 'wall_hit':
                    play_sound_effect(wall_hit_sound)
                if game_state['sound_event'] == 'platform_hit':
                    play_sound_effect(paddle_hit_sound)

        else:
            # –ï–∫—Ä–∞–Ω –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
            waiting_text = font_main.render(f"–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü—ñ–≤...", True, (255, 255, 255))
            screen.blit(waiting_text, (WIDTH // 2 - 125, HEIGHT // 2))

        # –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
        keys = key.get_pressed()
        if keys[K_w] and client:
            try:
                client.send(b"UP")
            except:
                current_state = MENU  # –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è
        elif keys[K_s] and client:
            try:
                client.send(b"DOWN")
            except:
                current_state = MENU  # –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è

    display.update()
    clock.tick(60)